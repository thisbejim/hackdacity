{
  "rules": {
    "admins": {
      ".read": "auth != null",
      ".write": "root.child('admins').hasChild(auth.uid)"
    },
    "alumni": {
      ".read": "root.child('admins').hasChild(auth.uid)",
      "$userId": {
      	".write": "root.child('admins').hasChild(auth.uid) || $userId === auth.uid && data.exists()"
       }
    },
    "users": {
      ".read": "true",
      ".indexOn": ["userName"],
      "$userId": {
        ".write": "root.child('admins').hasChild(auth.uid) || $userId === auth.uid",
        "status": {
          ".validate": "newData.val() == 'unverified' || root.child('admins').hasChild(auth.uid)"
        }
      }
    },
    "applied": {
      ".indexOn": ["signUpDate"],
      ".read": "root.child('admins').hasChild(auth.uid)",
      "$user_id": {
        ".write": "root.child('admins').hasChild(auth.uid) || $user_id === auth.uid"
      }
    },
    "currentHackathon": {
      ".read": "true",
      ".write": "root.child('admins').hasChild(auth.uid)"
    },
    "hackathons": {
      ".read": "true",
      ".write": "root.child('admins').hasChild(auth.uid)"
    },
    "categories": {
      ".indexOn": ["hackathonId"],
      ".read": "true",
      ".write": "root.child('admins').hasChild(auth.uid)"
    },
    "prizes": {
      ".indexOn": ["hackathonId"],
      ".read": "true",
      ".write": "root.child('admins').hasChild(auth.uid)"
    },
    "slack": {
      ".read": "root.child('admins').hasChild(auth.uid)",
      ".write": "root.child('admins').hasChild(auth.uid)"
    },
    "submissions": {
      ".read": "true",
      ".indexOn": ["hackathonId"],
      "$submission" : {
        ".write": "auth != null && root.child('alumni').hasChild(auth.uid)",
        "members": {
          ".validate": "newData.hasChild(auth.uid)"
        },
        "hackathonId": {
          ".validate": "root.child('hackathons').hasChild(newData.val())"
        },
        "categoryId": {
          ".validate": "root.child('categories').hasChild(newData.val())"
        },
        "id": {
          ".validate": "$submission === newData.val()"
        },
        "image": {
          ".validate": "newData.val() != null"
        },
        "title": {
          ".validate": "newData.val() != null"
        },
        "description": {
          ".validate": "newData.val() != null"
        },
        "votes": {
          "$userId": {
            ".validate": "$userId === auth.uid && newData.val() == true || newData.val() == null"
          }
        }
      }
    }
  }
}
