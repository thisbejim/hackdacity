{
  "rules": {
    "admins": {
      ".read": "auth != null",
      ".write": "root.child('admins').hasChild(auth.uid)",
    },
    "alumni": {
      ".read": "true",
    	".indexOn": ["userName"],
      "$user_id": {
      	".write": "root.child('admins').hasChild(auth.uid) || $user_id === auth.uid && data.exists()"
       }
    },
    "applied": {
      ".indexOn": ["date"],
      ".read": "root.child('admins').hasChild(auth.uid)",
      "$user_id": {
        ".write": "root.child('admins').hasChild(auth.uid) || $user_id === auth.uid",
      }
    },
    "currentHackathon": {
      ".read": "true",
      ".write": "root.child('admins').hasChild(auth.uid)",
    },
    "hackathons": {
      ".read": "true",
      ".write": "root.child('admins').hasChild(auth.uid)",
    },
    "categories": {
      ".indexOn": ["hackathonId"],
      ".read": "true",
      ".write": "root.child('admins').hasChild(auth.uid)",
    },
    "prizes": {
      ".indexOn": ["hackathonId"],
      ".read": "true",
      ".write": "root.child('admins').hasChild(auth.uid)",
    },
    "slack": {
      ".read": "root.child('admins').hasChild(auth.uid)",
      ".write": "root.child('admins').hasChild(auth.uid)",
    },
    "submissions": {
      ".read": "true",
      ".indexOn": ["hackathonId"],
      "$submission" : {
        "votes": {
          "$user_id": {
            ".write": "$user_id === auth.uid && root.child('alumni').hasChild(auth.uid)",
            ".validate": "newData.val() == true || newData.val() == null"
          }
        },
      }
    }
  }
}
